version: '3.5'

# Example Docker Compose config file for PhotoPrism (Raspberry Pi 3/4 and other ARM64-based devices)
#
# Note:
# - You have to boot your Raspberry Pi 3/4 with the parameter "arm_64bit=1" in config.txt to use our ARM64 (64-bit) image.
#   An "exec format" error will occur otherwise.
# - Try explicitly pulling the ARM64 version if you've booted your device with the "arm_64bit=1" flag and you see
#   the "no matching manifest" error on Raspberry Pi OS (Raspbian). See documentation for details.
# - Use https://dl.photoprism.app/docker/armv7/docker-compose.yml to run PhotoPrism and MariaDB on ARMv7-based devices
#   as well as Raspberry Pi OS (Raspbian) installations without 64-bit support.
# - Running PhotoPrism on a server with less than 4 GB of swap space or setting a memory/swap limit can cause unexpected
#   restarts ("crashes"), for example, when the indexer temporarily needs more memory to process large files.
# - In case you see Docker errors related to "cgroups", try adding the following parameters to /boot/firmware/cmdline.txt
#   or /boot/cmdline.txt (file location depends on the OS in use): cgroup_enable=cpuset cgroup_enable=memory cgroup_memory=1
# - If you install PhotoPrism on a public server outside your home network, please always run it behind a secure
#   HTTPS reverse proxy such as Traefik or Caddy. Your files and passwords will otherwise be transmitted
#   in clear text and can be intercepted by anyone, including your provider, hackers, and governments:
#   https://docs.photoprism.app/getting-started/proxies/traefik/
#
# Documentation : https://docs.photoprism.app/getting-started/raspberry-pi/
# Docker Hub URL: https://hub.docker.com/r/photoprism/photoprism/
#
# DOCKER COMPOSE COMMAND REFERENCE
# see https://docs.photoprism.app/getting-started/docker-compose/#command-line-interface
# --------------------------------------------------------------------------
# Start    | docker-compose up -d
# Stop     | docker-compose stop
# Update   | docker-compose pull
# Logs     | docker-compose logs --tail=25 -f
# Terminal | docker-compose exec photoprism bash
# Help     | docker-compose exec photoprism photoprism help
# Config   | docker-compose exec photoprism photoprism config
# Reset    | docker-compose exec photoprism photoprism reset
# Backup   | docker-compose exec photoprism photoprism backup -a -i
# Restore  | docker-compose exec photoprism photoprism restore -a -i
# Index    | docker-compose exec photoprism photoprism index
# Reindex  | docker-compose exec photoprism photoprism index -f
# Import   | docker-compose exec photoprism photoprism import
#
# To search originals for faces without a complete rescan:
# docker-compose exec photoprism photoprism faces index
#
# All commands may have to be prefixed with "sudo" when not running as root.
# This will point the home directory shortcut ~ to /root in volume mounts.

services:
  photoprism:
    image: photoprism/photoprism:arm64
    depends_on:
      - mariadb
    # restart: unless-stopped
    security_opt:
      - seccomp:unconfined
      - apparmor:unconfined
    ports:
      - "2342:2342" # HTTP port (host:container)
    environment:
      PHOTOPRISM_ADMIN_PASSWORD: "admin"          # YOUR INITIAL ADMIN PASSWORD (MINIMUM 8 CHARACTERS, USERNAME "admin")
      # PHOTOPRISM_ORIGINALS_LIMIT: 5000               # file size limit for originals in MB (increase for high-res video)
      # PHOTOPRISM_HTTP_COMPRESSION: "none"            # improves transfer speed and bandwidth utilization (none or gzip)
      # PHOTOPRISM_WORKERS: 2                          # limits the number of indexing workers to reduce system load
      # PHOTOPRISM_LOG_LEVEL: "info"                   # log level: trace, debug, info, warning, error, fatal, or panic
      # PHOTOPRISM_PUBLIC: "false"                     # no authentication required (disables password protection)
      # PHOTOPRISM_READONLY: "false"                   # do not modify originals directory (reduced functionality)
      # PHOTOPRISM_EXPERIMENTAL: "false"               # enables experimental features
      # PHOTOPRISM_DISABLE_CHOWN: "true"              # disables storage permission updates on startup
      # PHOTOPRISM_DISABLE_WEBDAV: "false"             # disables built-in WebDAV server
      # PHOTOPRISM_DISABLE_SETTINGS: "false"           # disables Settings in Web UI
      # PHOTOPRISM_DISABLE_TENSORFLOW: "true"         # disables all features depending on TensorFlow
      # PHOTOPRISM_DISABLE_FACES: "false"              # disables facial recognition
      # PHOTOPRISM_DISABLE_CLASSIFICATION: "false"     # disables image classification
      # PHOTOPRISM_DISABLE_RAW: "false"                # disables indexing and conversion of RAW files
      # PHOTOPRISM_RAW_PRESETS: "false"                # enables applying user presets when converting RAW files (reduces performance)
      # PHOTOPRISM_JPEG_QUALITY: 100                   # image quality, a higher value reduces compression (25-100)
      # PHOTOPRISM_DETECT_NSFW: "true"                 # flag photos as private that MAY be offensive
      # PHOTOPRISM_UPLOAD_NSFW: "true"                 # allow uploads that MAY be offensive
      # PHOTOPRISM_DATABASE_DRIVER: "sqlite"         # SQLite is an embedded database that doesn't require a server
      PHOTOPRISM_DATABASE_DRIVER: "mysql"            # use MariaDB 10.5+ or MySQL 8+ instead of SQLite for improved performance
      PHOTOPRISM_DATABASE_SERVER: "mariadb:3306"     # MariaDB or MySQL database server (hostname:port)
      PHOTOPRISM_DATABASE_NAME: "photoprism"         # MariaDB or MySQL database schema name
      PHOTOPRISM_DATABASE_USER: "photoprism"         # MariaDB or MySQL database user name
      PHOTOPRISM_DATABASE_PASSWORD: "B8iGPp466MQo4s"       # MariaDB or MySQL database user password
      PHOTOPRISM_SITE_CAPTION: "AI-Powered Photos App"
      PHOTOPRISM_SITE_DESCRIPTION: ""                # meta site description
      PHOTOPRISM_SITE_AUTHOR: ""                     # meta site author
      ## Run/install on first startup (options: update, gpu, tensorflow, davfs, clean):
      # PHOTOPRISM_INIT: "update clean"
      ## Hardware Video Transcoding (for sponsors only due to high maintenance and support costs):
      # PHOTOPRISM_FFMPEG_ENCODER: "raspberry"       # FFmpeg encoder ("software", "intel", "nvidia", "apple", "raspberry")
      # PHOTOPRISM_FFMPEG_BITRATE: "32"              # FFmpeg encoding bitrate limit in Mbit/s (default: 50)
      ## Switch to a non-root user after initialization (supported IDs are 33, 50-99, 500-600, and 900-1200):
      PHOTOPRISM_UID: 1000
      PHOTOPRISM_GID: 1000
      # PHOTOPRISM_UMASK: 0000
    ## Share hardware devices with FFmpeg and TensorFlow (optional):
    # devices:
    #  - "/dev/video11:/dev/video11"                 # Raspberry V4L2
    working_dir: "/photoprism" # do not change or remove
    volumes:
      - "/mnt/usb0/GooglePhotos:/photoprism/originals"               # Original media files (DO NOT REMOVE)
      # - "~/Import:/photoprism/import"                  # *Optional* base folder from which files can be imported to originals
      - "./ph-data/:/photoprism/storage/"                  # *Writable* storage folder for cache, database, and sidecar files (DO NOT REMOVE)

  mariadb:
    restart: unless-stopped
    image: mariadb:latest
    security_opt:
      - seccomp:unconfined
      - apparmor:unconfined
    command: mysqld --innodb-buffer-pool-size=128M --transaction-isolation=READ-COMMITTED --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci --max-connections=512 --innodb-rollback-on-timeout=OFF --innodb-lock-wait-timeout=120
    volumes:
      - "/mnt/usb0/maria-db:/var/lib/mysql" # DO NOT REMOVE
    environment:
      MARIADB_AUTO_UPGRADE: "1"
      MARIADB_INITDB_SKIP_TZINFO: "1"
      MARIADB_DATABASE: "photoprism"
      MARIADB_USER: "photoprism"
      MARIADB_PASSWORD: "B8iGPp466MQo4s"
      MARIADB_ROOT_PASSWORD: "B8iGPp466MQo4s"
      UID: 1000
      GID: 1000
